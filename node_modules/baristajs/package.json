{
  "name": "baristajs",
  "version": "0.1.2",
  "repository": {
    "type": "git",
    "url": "https://github.com/danascheider/barista"
  },
  "description": "JavaScript test fixtures for use with Backbone.js",
  "scripts": {
    "test": "jasmine"
  },
  "dependencies": {
    "jquery": "~2.1.3",
    "underscore": "~1.8.2",
    "backbone": "~1.1.2"
  },
  "devDependencies": {
    "browserify": "~9.0.8",
    "gulp": "^3.8.11",
    "jasmine": "~2.2.1",
    "jasmine-node": "~1.14.5",
    "gulp-uglify": "~1.2.0",
    "vinyl-source-stream": "^0",
    "vinyl-buffer": "~1.0.0",
    "gulp-sourcemaps": "~1.5.2",
    "reactify": "~1.1.0"
  },
  "readme": "## BaristaJS [![Build Status](https://travis-ci.org/danascheider/barista.svg?branch=dev)](https://travis-ci.org/danascheider/barista)  [![Code Climate](https://codeclimate.com/github/danascheider/barista/badges/gpa.svg)](https://codeclimate.com/github/danascheider/barista)\nFixtures for testing Backbone.js apps. Currently in beginning stages of development.\nThe `example` directory contains a small Backbone.js app that is being used to test the\nframework.\n\n### Usage\n#### Installing Barista\nInstall Barista using NPM:\n    npm install baristajs\n\n#### Configuring Barista\nConfiguring Barista is easy but relies on a couple of conventions:\n  1. Your app must be represented as an object. In Node or iojs:\n         `var App = require('./app.min.js')`\n  2. All models and collections must be namespaced to the app:\n         `App.TodoItemModel = Backbone.Model.extend({ ... });`\n  3. All models must include the word \"Model\" or \"model\" in their name\n  4. All collections must include the words \"Collection\" or \"collection\"\n     in their name\n\nIf your app follows these conventions, then just put this in your spec helper file or wherever\nyou keep your test configuration:\n    var Barista = require('baristajs'),\n        App     = require('../app.js');\n\n    Barista.config(app);\n\nThat's it! Now, all your models and collections have a corresponding model or collection\nnamespaced to Barista. So, if your model was called `App.TodoItemModel`, then there is a\nBarista model called `Barista.TodoItemModel`.\n\nIn order to ensure a clean environment with every test, it is recommended that you add\nthis to your `afterEach` block (if using Jasmine), or the analogous block in the framework\nyou are using (e.g., `after('each')`, etc.):\n    Barista.destroy();\n\nThe global `Barista` object tracks its models and collections, so you can destroy all of them\neasily by calling this method.\n\n#### How Barista Models and Collections Work\nThe `Barista.Model` and `Barista.Collection` objects extend `Backbone.Model` and \n`Backbone.Collection`, respectively. They replace Backbone methods that interact with the\ndatabase with corresponding methods that change the state of the object the way the Backbone\nmethod does (i.e., adding or removing items from a collection, etc.), but without making\nAjax requests, interacting with a database, or altering the environment.\n\nThe global `Barista` object keeps track of all the models and collections that currently exist.\nThis makes it easy to destroy the models and collections in one fell swoop using \n`Barista.destroy()`. Alternatively, you can use the `destroy` method on individual models and\ncollections to remove all references from them, so they will be garbage collected.\n\n#### Contributing\nThis is a very new framework and was created for me to use on one of my [other projects](https://github.com/danascheider/canto-front-end). PRs are gratefully accepted, but I do ask that they be accompanied by passing tests. I'm also very appreciative of any issue reports. If you are experiencing errors, please include the full text of the error message you are receiving along with any parts of your code that may possibly be relevant. \n\nI know that this version of Barista is very limited. I am running my tests using Jasmine under iojs\nwith jsdom (and PhantomJS to test jQuery and CSS), so this is the environment where it will work best right now. If you can submit a PR that makes Barista handle more cases, that is awesome.",
  "readmeFilename": "README.md",
  "gitHead": "b848f00d94584c4044d925873a9a56c90fa91f89",
  "bugs": {
    "url": "https://github.com/danascheider/barista/issues"
  },
  "homepage": "https://github.com/danascheider/barista",
  "_id": "baristajs@0.1.2",
  "_shasum": "888e1f2677be22d9d7ff617b14f94a69906c3f56",
  "_from": "baristajs@0.1.2"
}
